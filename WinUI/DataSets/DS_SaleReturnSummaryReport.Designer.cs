//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace StockAndSale.WinUI.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_SaleReturnSummaryReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_SaleReturnSummaryReport : global::System.Data.DataSet {
        
        private dt_SaleSummaryDataTable tabledt_SaleSummary;
        
        private dt_ReturnSummaryDataTable tabledt_ReturnSummary;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_SaleReturnSummaryReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_SaleReturnSummaryReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dt_SaleSummary"] != null)) {
                    base.Tables.Add(new dt_SaleSummaryDataTable(ds.Tables["dt_SaleSummary"]));
                }
                if ((ds.Tables["dt_ReturnSummary"] != null)) {
                    base.Tables.Add(new dt_ReturnSummaryDataTable(ds.Tables["dt_ReturnSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_SaleSummaryDataTable dt_SaleSummary {
            get {
                return this.tabledt_SaleSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_ReturnSummaryDataTable dt_ReturnSummary {
            get {
                return this.tabledt_ReturnSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_SaleReturnSummaryReport cln = ((DS_SaleReturnSummaryReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dt_SaleSummary"] != null)) {
                    base.Tables.Add(new dt_SaleSummaryDataTable(ds.Tables["dt_SaleSummary"]));
                }
                if ((ds.Tables["dt_ReturnSummary"] != null)) {
                    base.Tables.Add(new dt_ReturnSummaryDataTable(ds.Tables["dt_ReturnSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledt_SaleSummary = ((dt_SaleSummaryDataTable)(base.Tables["dt_SaleSummary"]));
            if ((initTable == true)) {
                if ((this.tabledt_SaleSummary != null)) {
                    this.tabledt_SaleSummary.InitVars();
                }
            }
            this.tabledt_ReturnSummary = ((dt_ReturnSummaryDataTable)(base.Tables["dt_ReturnSummary"]));
            if ((initTable == true)) {
                if ((this.tabledt_ReturnSummary != null)) {
                    this.tabledt_ReturnSummary.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_SaleReturnSummaryReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_SaleReturnSummaryReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledt_SaleSummary = new dt_SaleSummaryDataTable();
            base.Tables.Add(this.tabledt_SaleSummary);
            this.tabledt_ReturnSummary = new dt_ReturnSummaryDataTable();
            base.Tables.Add(this.tabledt_ReturnSummary);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedt_SaleSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedt_ReturnSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_SaleReturnSummaryReport ds = new DS_SaleReturnSummaryReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dt_SaleSummaryRowChangeEventHandler(object sender, dt_SaleSummaryRowChangeEvent e);
        
        public delegate void dt_ReturnSummaryRowChangeEventHandler(object sender, dt_ReturnSummaryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_SaleSummaryDataTable : global::System.Data.TypedTableBase<dt_SaleSummaryRow> {
            
            private global::System.Data.DataColumn columnProduct_Code;
            
            private global::System.Data.DataColumn columnProduct_Description;
            
            private global::System.Data.DataColumn columnCartons;
            
            private global::System.Data.DataColumn columnUnits;
            
            private global::System.Data.DataColumn columnSale_Amount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_SaleSummaryDataTable() {
                this.TableName = "dt_SaleSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_SaleSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dt_SaleSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_CodeColumn {
                get {
                    return this.columnProduct_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_DescriptionColumn {
                get {
                    return this.columnProduct_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonsColumn {
                get {
                    return this.columnCartons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_AmountColumn {
                get {
                    return this.columnSale_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_SaleSummaryRow this[int index] {
                get {
                    return ((dt_SaleSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dt_SaleSummaryRowChangeEventHandler dt_SaleSummaryRowChanging;
            
            public event dt_SaleSummaryRowChangeEventHandler dt_SaleSummaryRowChanged;
            
            public event dt_SaleSummaryRowChangeEventHandler dt_SaleSummaryRowDeleting;
            
            public event dt_SaleSummaryRowChangeEventHandler dt_SaleSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddt_SaleSummaryRow(dt_SaleSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_SaleSummaryRow Adddt_SaleSummaryRow(string Product_Code, string Product_Description, int Cartons, int Units, decimal Sale_Amount) {
                dt_SaleSummaryRow rowdt_SaleSummaryRow = ((dt_SaleSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Product_Code,
                        Product_Description,
                        Cartons,
                        Units,
                        Sale_Amount};
                rowdt_SaleSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_SaleSummaryRow);
                return rowdt_SaleSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dt_SaleSummaryDataTable cln = ((dt_SaleSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_SaleSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProduct_Code = base.Columns["Product_Code"];
                this.columnProduct_Description = base.Columns["Product_Description"];
                this.columnCartons = base.Columns["Cartons"];
                this.columnUnits = base.Columns["Units"];
                this.columnSale_Amount = base.Columns["Sale_Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProduct_Code = new global::System.Data.DataColumn("Product_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Code);
                this.columnProduct_Description = new global::System.Data.DataColumn("Product_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Description);
                this.columnCartons = new global::System.Data.DataColumn("Cartons", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartons);
                this.columnUnits = new global::System.Data.DataColumn("Units", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnSale_Amount = new global::System.Data.DataColumn("Sale_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Amount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_SaleSummaryRow Newdt_SaleSummaryRow() {
                return ((dt_SaleSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_SaleSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dt_SaleSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_SaleSummaryRowChanged != null)) {
                    this.dt_SaleSummaryRowChanged(this, new dt_SaleSummaryRowChangeEvent(((dt_SaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_SaleSummaryRowChanging != null)) {
                    this.dt_SaleSummaryRowChanging(this, new dt_SaleSummaryRowChangeEvent(((dt_SaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_SaleSummaryRowDeleted != null)) {
                    this.dt_SaleSummaryRowDeleted(this, new dt_SaleSummaryRowChangeEvent(((dt_SaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_SaleSummaryRowDeleting != null)) {
                    this.dt_SaleSummaryRowDeleting(this, new dt_SaleSummaryRowChangeEvent(((dt_SaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedt_SaleSummaryRow(dt_SaleSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_SaleReturnSummaryReport ds = new DS_SaleReturnSummaryReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_SaleSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_ReturnSummaryDataTable : global::System.Data.TypedTableBase<dt_ReturnSummaryRow> {
            
            private global::System.Data.DataColumn columnProduct_Code;
            
            private global::System.Data.DataColumn columnProduct_Description;
            
            private global::System.Data.DataColumn columnCartons;
            
            private global::System.Data.DataColumn columnUnits;
            
            private global::System.Data.DataColumn columnRet_Amount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_ReturnSummaryDataTable() {
                this.TableName = "dt_ReturnSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_ReturnSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dt_ReturnSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_CodeColumn {
                get {
                    return this.columnProduct_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_DescriptionColumn {
                get {
                    return this.columnProduct_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonsColumn {
                get {
                    return this.columnCartons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ret_AmountColumn {
                get {
                    return this.columnRet_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_ReturnSummaryRow this[int index] {
                get {
                    return ((dt_ReturnSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dt_ReturnSummaryRowChangeEventHandler dt_ReturnSummaryRowChanging;
            
            public event dt_ReturnSummaryRowChangeEventHandler dt_ReturnSummaryRowChanged;
            
            public event dt_ReturnSummaryRowChangeEventHandler dt_ReturnSummaryRowDeleting;
            
            public event dt_ReturnSummaryRowChangeEventHandler dt_ReturnSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddt_ReturnSummaryRow(dt_ReturnSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_ReturnSummaryRow Adddt_ReturnSummaryRow(string Product_Code, string Product_Description, int Cartons, int Units, decimal Ret_Amount) {
                dt_ReturnSummaryRow rowdt_ReturnSummaryRow = ((dt_ReturnSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Product_Code,
                        Product_Description,
                        Cartons,
                        Units,
                        Ret_Amount};
                rowdt_ReturnSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_ReturnSummaryRow);
                return rowdt_ReturnSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dt_ReturnSummaryDataTable cln = ((dt_ReturnSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_ReturnSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProduct_Code = base.Columns["Product_Code"];
                this.columnProduct_Description = base.Columns["Product_Description"];
                this.columnCartons = base.Columns["Cartons"];
                this.columnUnits = base.Columns["Units"];
                this.columnRet_Amount = base.Columns["Ret_Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProduct_Code = new global::System.Data.DataColumn("Product_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Code);
                this.columnProduct_Description = new global::System.Data.DataColumn("Product_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Description);
                this.columnCartons = new global::System.Data.DataColumn("Cartons", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartons);
                this.columnUnits = new global::System.Data.DataColumn("Units", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnRet_Amount = new global::System.Data.DataColumn("Ret_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRet_Amount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_ReturnSummaryRow Newdt_ReturnSummaryRow() {
                return ((dt_ReturnSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_ReturnSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dt_ReturnSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_ReturnSummaryRowChanged != null)) {
                    this.dt_ReturnSummaryRowChanged(this, new dt_ReturnSummaryRowChangeEvent(((dt_ReturnSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_ReturnSummaryRowChanging != null)) {
                    this.dt_ReturnSummaryRowChanging(this, new dt_ReturnSummaryRowChangeEvent(((dt_ReturnSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_ReturnSummaryRowDeleted != null)) {
                    this.dt_ReturnSummaryRowDeleted(this, new dt_ReturnSummaryRowChangeEvent(((dt_ReturnSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_ReturnSummaryRowDeleting != null)) {
                    this.dt_ReturnSummaryRowDeleting(this, new dt_ReturnSummaryRowChangeEvent(((dt_ReturnSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedt_ReturnSummaryRow(dt_ReturnSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_SaleReturnSummaryReport ds = new DS_SaleReturnSummaryReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_ReturnSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dt_SaleSummaryRow : global::System.Data.DataRow {
            
            private dt_SaleSummaryDataTable tabledt_SaleSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_SaleSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_SaleSummary = ((dt_SaleSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Code {
                get {
                    try {
                        return ((string)(this[this.tabledt_SaleSummary.Product_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_Code\' in table \'dt_SaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_SaleSummary.Product_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Description {
                get {
                    try {
                        return ((string)(this[this.tabledt_SaleSummary.Product_DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_Description\' in table \'dt_SaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_SaleSummary.Product_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cartons {
                get {
                    try {
                        return ((int)(this[this.tabledt_SaleSummary.CartonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cartons\' in table \'dt_SaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_SaleSummary.CartonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Units {
                get {
                    try {
                        return ((int)(this[this.tabledt_SaleSummary.UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units\' in table \'dt_SaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_SaleSummary.UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sale_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledt_SaleSummary.Sale_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Amount\' in table \'dt_SaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_SaleSummary.Sale_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_CodeNull() {
                return this.IsNull(this.tabledt_SaleSummary.Product_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_CodeNull() {
                this[this.tabledt_SaleSummary.Product_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_DescriptionNull() {
                return this.IsNull(this.tabledt_SaleSummary.Product_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_DescriptionNull() {
                this[this.tabledt_SaleSummary.Product_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsNull() {
                return this.IsNull(this.tabledt_SaleSummary.CartonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsNull() {
                this[this.tabledt_SaleSummary.CartonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsNull() {
                return this.IsNull(this.tabledt_SaleSummary.UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsNull() {
                this[this.tabledt_SaleSummary.UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_AmountNull() {
                return this.IsNull(this.tabledt_SaleSummary.Sale_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_AmountNull() {
                this[this.tabledt_SaleSummary.Sale_AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dt_ReturnSummaryRow : global::System.Data.DataRow {
            
            private dt_ReturnSummaryDataTable tabledt_ReturnSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_ReturnSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_ReturnSummary = ((dt_ReturnSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Code {
                get {
                    try {
                        return ((string)(this[this.tabledt_ReturnSummary.Product_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_Code\' in table \'dt_ReturnSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_ReturnSummary.Product_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Description {
                get {
                    try {
                        return ((string)(this[this.tabledt_ReturnSummary.Product_DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_Description\' in table \'dt_ReturnSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledt_ReturnSummary.Product_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cartons {
                get {
                    try {
                        return ((int)(this[this.tabledt_ReturnSummary.CartonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cartons\' in table \'dt_ReturnSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_ReturnSummary.CartonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Units {
                get {
                    try {
                        return ((int)(this[this.tabledt_ReturnSummary.UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units\' in table \'dt_ReturnSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_ReturnSummary.UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ret_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledt_ReturnSummary.Ret_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ret_Amount\' in table \'dt_ReturnSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_ReturnSummary.Ret_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_CodeNull() {
                return this.IsNull(this.tabledt_ReturnSummary.Product_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_CodeNull() {
                this[this.tabledt_ReturnSummary.Product_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_DescriptionNull() {
                return this.IsNull(this.tabledt_ReturnSummary.Product_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_DescriptionNull() {
                this[this.tabledt_ReturnSummary.Product_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsNull() {
                return this.IsNull(this.tabledt_ReturnSummary.CartonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsNull() {
                this[this.tabledt_ReturnSummary.CartonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsNull() {
                return this.IsNull(this.tabledt_ReturnSummary.UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsNull() {
                this[this.tabledt_ReturnSummary.UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRet_AmountNull() {
                return this.IsNull(this.tabledt_ReturnSummary.Ret_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRet_AmountNull() {
                this[this.tabledt_ReturnSummary.Ret_AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dt_SaleSummaryRowChangeEvent : global::System.EventArgs {
            
            private dt_SaleSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_SaleSummaryRowChangeEvent(dt_SaleSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_SaleSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dt_ReturnSummaryRowChangeEvent : global::System.EventArgs {
            
            private dt_ReturnSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_ReturnSummaryRowChangeEvent(dt_ReturnSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_ReturnSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591